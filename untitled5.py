# -*- coding: utf-8 -*-
"""Untitled5.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-eIbGQ0uvn8oZ0ZJZUFWk5kbI9orLInu
"""

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import pandas as pd
# %matplotlib inline

data=pd.read_csv('/content/Iris.csv')

data.info()

feature=['SepalLengthCm','SepalWidthCm','PetalLengthCm','PetalWidthCm']
Prediction=['Species']

X=data[feature].values
Y=data[Prediction].values

plt.plot(X)

from sklearn.model_selection import train_test_split
X_train, X_test, Y_train, Y_test= train_test_split(X, Y, test_size=0.40, random_state=42)

#SVM

from sklearn import svm
clf=svm.SVC(kernel='linear')
clf.fit(X_train, Y_train)
Y_Predict=clf.predict(X_test)

from sklearn import metrics
print("Accuracy",metrics.accuracy_score(Y_test, Y_Predict))

#DecisionTree Classifier

from sklearn.tree import DecisionTreeClassifier

clf=DecisionTreeClassifier()
clf.fit(X_train,Y_train)

DecisionTreeClassifier()

Y_pred=clf.predict(X_test)

from sklearn import metrics
print("Accuracy:",metrics,metrics.accuracy_score(Y_test,Y_pred)*100)

#RandomForest Classifier

from sklearn.ensemble import RandomForestClassifier

clf=RandomForestClassifier()
clf.fit(X_train,Y_train)

Y_pred=clf.predict(X_test)

from sklearn import metrics
print("Accuracy:",metrics,metrics.accuracy_score(Y_test,Y_pred)*100)

#KNN Classifier

from sklearn.neighbors import KNeighborsClassifier

clf = KNeighborsClassifier(n_neighbors=5)
clf.fit(X_train,Y_train)
Y_pred=clf.predict(X_test)

from sklearn import metrics
print("Accuracy:",metrics,metrics.accuracy_score(Y_test,Y_pred)*100)

#Logistic Regression

from sklearn.linear_model import LogisticRegression
reg = LogisticRegression()
reg.fit(X_train,Y_train)
y_pred = reg.predict(X_test)

from sklearn import metrics
print("Accuracy:",metrics,metrics.accuracy_score(Y_test,Y_pred)*100)